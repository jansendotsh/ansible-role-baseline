---
# tasks file for basic_setup
- name: Assert supported distribution
  assert:
    that:
      - "ansible_pkg_mgr in ('yum', 'dnf')"

- name: Check if vars/private.yml is present
  stat: path={{ role_path }}/vars/private.yml
  register: private_vars

- set_fact: 
    server_fqdn: "{{ server_hostname }}"

- name: Running system updates
  package:
    name: "*"
    state: latest

- name: 'Perform distribution specific tasks ({{ ansible_pkg_mgr }})'
  include_tasks: 'tasks-{{ ansible_pkg_mgr }}.yml'

- name: Set the timezone for the server to Los Angeles local
  command: timedatectl set-timezone 'America/Los_Angeles'

- name: Set up a unique hostname
  hostname: name={{ server_hostname }}

- name: Add the server's domain to the hosts file
  lineinfile: dest=/etc/hosts
              regexp='.*{{ item }}$'
              line="{{ hostvars[item].ansible_default_ipv4.address }} {{ server_fqdn }} {{ server_hostname }}"
              state=present
  when: hostvars[item].ansible_default_ipv4.address is defined
  with_items: "{{ groups['all'] }}"

- name: Create a secondary, non-root user
  user: 
    name: "{{ nonroot_user }}"
    password: "{{ nonroot_pass }}"
    shell: /bin/bash

- name: Install all needed remote authorized keys from GitHub public profile
  authorized_key:
    user: "{{ nonroot_user }}"
    state: present
    key: "https://{{ git_url | default('github.com') }}/{{ git_user }}.keys"

- name: Add normal user to sudoers
  lineinfile: 
    dest: /etc/sudoers
    line: "{{ nonroot_user }} ALL=(ALL) ALL"
    state: present

- name: Configure SSH daemon
  copy:
    src: "{{ role_path }}/files/sshd_config"
    dest: "/etc/ssh/sshd_config"
  notify: restart ssh
